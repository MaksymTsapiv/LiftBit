services:
  # <<-- NGINX -->>
  nginx:
    # depends_on:
    #   - files-ms
    restart: always
    build:
      context: ./nginx
    ports:
      - ${PORT}:3000

  # <<-- MICROSERVICES -->>
  files-ms:
    build:
      context: ./files-ms

  storage-ms:
    build:
      context: ./storage-ms
    env_file:
        - ./storage-ms/.env


  metadata-ms:
    build:
      context: ./metadata-ms
      dockerfile: Dockerfile
    depends_on:
      - metadata-db

  metadata-db:
    image: cassandra:latest
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
      interval: 30s
      timeout: 10s
      retries: 5

  metadata-db-setuper:
    image: cassandra:latest
    depends_on:
      metadata-db:
        condition:
          service_healthy
    restart: "no"
    entrypoint: ["/setup_metadata_db.sh"]
    volumes:
      - ./metadata-db-setuper/cql/create_schema.cql:/create_schema.cql
      - ./metadata-db-setuper/setup_metadata_db.sh:/setup_metadata_db.sh

  # login-ms:
  #   build:
  #     context: ./login-ms
  #     dockerfile: Dockerfile
  # register-ms:
  #   build:
  #     context: ./register-ms
  #     dockerfile: Dockerfile
